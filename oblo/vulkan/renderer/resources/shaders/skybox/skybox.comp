#version 460

#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_nonuniform_qualifier : require

#include <renderer/textures>

layout(binding = 0, rgba8) uniform restrict writeonly image2D t_OutImage;

layout(local_size_x = OBLO_SUBGROUP_SIZE, local_size_y = 1, local_size_z = 1) in;

layout(push_constant) uniform c_PushConstants
{
    uint skybox;
}
g_Constants;

void main()
{
    const uvec2 resolution = imageSize(t_OutImage);
    const ivec2 screenPos = ivec2(gl_WorkGroupID.xy * gl_WorkGroupSize.xy + gl_LocalInvocationID.xy);

    if (screenPos.x >= resolution.x || screenPos.y >= resolution.y)
    {
        return;
    }

    const vec2 uv = vec2(screenPos) / resolution;

    const uint lod = 0;
    const vec4 color = texture_sample_2d_lod(g_Constants.skybox, OBLO_SAMPLER_LINEAR, uv, lod);

    imageStore(t_OutImage, screenPos, color);
}