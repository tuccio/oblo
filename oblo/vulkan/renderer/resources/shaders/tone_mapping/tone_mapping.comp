#version 460

#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_nonuniform_qualifier : require

#include <renderer/math>
#include <renderer/textures>
#include <tone_mapping/tonemap>

layout(binding = 0, rgba16f) uniform restrict readonly image2D t_InHDR;
layout(binding = 1, rgba8) uniform restrict writeonly image2D t_OutLDR;

layout(local_size_x = OBLO_SUBGROUP_SIZE, local_size_y = 1, local_size_z = 1) in;

vec3 tone_map(in vec3 x)
{
#if 1
    return tonemap_aces_approx(x);
#else
    return tonemap_aces_hill(x);
#endif
}

void main()
{
    const uvec2 resolution = imageSize(t_InHDR);
    const ivec2 screenPos = ivec2(gl_WorkGroupID.xy * gl_WorkGroupSize.xy + gl_LocalInvocationID.xy);

    if (screenPos.x >= resolution.x || screenPos.y >= resolution.y)
    {
        return;
    }

    const vec4 hdr = imageLoad(t_InHDR, screenPos);
    const vec4 ldr = vec4(tone_map(hdr.xyz), hdr.w);

    imageStore(t_OutLDR, screenPos, ldr);
}